---
- name: Add pam config for ssh auth with yubikey with pass
  template:
    src: etc/pam.d/yubico-sshd-auth
    dest: /etc/pam.d/yubico-sshd-auth
    mode: 0644
    owner: root
    group: root
    backup: yes
  when:
    - pam_yubikey_sshd_with_pass == true
    - pam_yubikey_sshd_with_nopass == false
  tags:
    - configure
    - pam
    - yubikey

- name: Add pam config for ssh auth with yubikey
  template:
    src: etc/pam.d/yubico-sshd-auth-nopass
    dest: /etc/pam.d/yubico-sshd-auth
    mode: 0644
    owner: root
    group: root
    backup: yes
  when:
    - pam_yubikey_sshd_with_pass == false
    - pam_yubikey_sshd_with_nopass == true
  tags:
    - configure
    - pam
    - yubikey

- name: Add yubikey system group
  group:
    name: yubikey
    state: present
    system: yes
  when:
    - pam_yubikey_sshd_with_pass == true or pam_yubikey_sshd_with_nopass == true
    - pam_yubikey_sshd_with_pass != pam_yubikey_sshd_with_nopass
  tags:
    - configure
    - group
    - yubikey

- name: Check for sshd pam config
  stat: path=/etc/pam.d/sshd
  register: pam_sshd

- name: Configure sshd pam not to include common-auth or password-auth
  lineinfile:
    state: present
    dest: /etc/pam.d/sshd
    regexp: "{{ item.regex_match }}"
    line: "{{ item.line }}"
    backrefs: yes
    backup: yes
  with_items:
    - regex_match: '^@include common-auth$'
      line: '#@include common-auth'
    - regex_match: '^(auth\s+substack\s+password-auth)$'
      line: '#\1'
  when:
    - pam_yubikey_api_id is defined
    - pam_yubikey_api_key is defined
    - pam_yubikey_sshd_with_pass == true or pam_yubikey_sshd_with_nopass == true
    - pam_yubikey_sshd_with_pass != pam_yubikey_sshd_with_nopass
  tags:
    - configure
    - sudo
    - yubikey
    - pam

- name: Configure sshd pam to include yubico-sshd-auth (Debian/Ubuntu)
  lineinfile:
    state: present
    dest: /etc/pam.d/sshd
    insertbefore: "{{ item.regex_match }}"
    line: "{{ item.line }}"
    backup: yes
    create: no
  with_items:
    - regex_match: '^#@include common-auth$'
      line: '@include yubico-sshd-auth'
  when:
    - pam_yubikey_api_id is defined
    - pam_yubikey_api_key is defined
    - pam_sshd.stat.exists == true
    - pam_yubikey_sshd_with_pass == true or pam_yubikey_sshd_with_nopass == true
    - pam_yubikey_sshd_with_pass != pam_yubikey_sshd_with_nopass
    - ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
  tags:
    - configure
    - openssh
    - yubikey
    - pam

- name: Configure sshd pam to include yubico-sshd-auth (Fedora)
  lineinfile:
    state: present
    dest: /etc/pam.d/sshd
    insertbefore: "{{ item.regex_match }}"
    line: "{{ item.line }}"
    backup: yes
    create: no
  with_items:
    - regex_match: '^#auth\s+substack\s+password-auth$'
      line: 'auth include yubico-sshd-auth'
  when:
    - pam_yubikey_api_id is defined
    - pam_yubikey_api_key is defined
    - pam_sshd.stat.exists == true
    - pam_yubikey_sshd_with_pass == true or pam_yubikey_sshd_with_nopass == true
    - pam_yubikey_sshd_with_pass != pam_yubikey_sshd_with_nopass
    - ansible_distribution == "Fedora"
  tags:
    - configure
    - openssh
    - yubikey
    - pam

- name: Add pam config for sudo auth with yubikey with pass
  template:
    src: etc/pam.d/yubico-sudo-auth
    dest: /etc/pam.d/yubico-sudo-auth
    mode: 0644
    owner: root
    group: root
  when:
    - pam_yubikey_sudo_with_pass == true
    - pam_yubikey_sudo_with_nopass == false
  tags:
    - configure
    - pam
    - yubikey

- name: Add pam config for sudo auth with yubikey
  template:
    src: etc/pam.d/yubico-sudo-auth-nopass
    dest: /etc/pam.d/yubico-sudo-auth
    mode: 0644
    owner: root
    group: root
    backup: yes
  when:
    - pam_yubikey_sudo_with_pass == false
    - pam_yubikey_sudo_with_nopass == true
  tags:
    - configure
    - pam
    - yubikey

- name: Check for sudo pam config
  stat: path=/etc/pam.d/sudo
  register: pam_sudo

- name: Configure sudo pam not to include common-auth or system-auth
  lineinfile:
    state: present
    dest: /etc/pam.d/sudo
    regexp: "{{ item.regex_match }}"
    line: "{{ item.line }}"
    backrefs: yes
  with_items:
    - regex_match: '^@include common-auth$'
      line: '#@include common-auth'
    - regex_match: '^(auth\s+include\s+system-auth)$'
      line: '#\1'
  when:
    - pam_yubikey_api_id is defined
    - pam_yubikey_api_key is defined
    - pam_sudo.stat.exists == true
    - pam_yubikey_sshd_with_pass == true or pam_yubikey_sshd_with_nopass == true
    - pam_yubikey_sshd_with_pass != pam_yubikey_sshd_with_nopass
  tags:
    - configure
    - sudo
    - yubikey
    - pam

- name: Configure sudo pam to include yubico-sudo-auth (Ubuntu/Debian)
  lineinfile:
    state: present
    dest: /etc/pam.d/sudo
    insertbefore: "{{ item.regex_match }}"
    line: "{{ item.line }}"
    create: no
  with_items:
    - regex_match: '^#@include common-auth$'
      line: '@include yubico-sudo-auth'
  when:
    - pam_yubikey_api_id is defined
    - pam_yubikey_api_key is defined
    - pam_sudo.stat.exists == true
    - pam_yubikey_sudo_with_pass == true or pam_yubikey_sudo_with_nopass == true
    - pam_yubikey_sudo_with_pass != pam_yubikey_sudo_with_nopass
    - ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
  tags:
    - configure
    - sudo
    - yubikey
    - pam

- name: Configure sudo pam to include yubico-sudo-auth (Fedora)
  lineinfile:
    state: present
    dest: /etc/pam.d/sudo
    insertbefore: "{{ item.regex_match }}"
    line: "{{ item.line }}"
    create: no
  with_items:
    - regex_match: '^#auth\s+include\s+system-auth$'
      line: 'auth include yubico-sudo-auth'
  when:
    - pam_yubikey_api_id is defined
    - pam_yubikey_api_key is defined
    - pam_sudo.stat.exists == true
    - pam_yubikey_sudo_with_pass == true or pam_yubikey_sudo_with_nopass == true
    - pam_yubikey_sudo_with_pass != pam_yubikey_sudo_with_nopass
    - ansible_distribution == "Fedora"
  tags:
    - configure
    - sudo
    - yubikey
    - pam

- name: Allow ypbind on SELinux, yubico module depends on it.
  seboolean:
    name: allow_ypbind
    state: yes
    persistent: true
  when:
    - ansible_selinux['status']|default('disabled') == "enabled"
