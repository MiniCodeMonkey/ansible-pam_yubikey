#jinja2: trim_blocks: "true", lstrip_blocks: "false"
# Ansible managed file, do not edit directly
# yubikey pam config for sudoers
{% set pass_fallback_jump = 4 %}
{% if yubikey_sudo_and_pass %}
{% set pass_fallback_jump = 6 %}
{% endif -%}
{% if not yubikey_sudo_chal_rsp %}
{% set pass_fallback_jump = pass_fallback_jump - 1 %}
{% endif %}

{% if ansible_os_family != "Debian" %}
auth        required                    pam_env.so
{% endif %}
{% if ansible_os_family == "RedHat" %}
auth        required                    pam_faildelay.so delay=2000000
{% endif %}
# can not be a system user
auth        requisite                   pam_succeed_if.so uid >= 1000 quiet_success
# need to be part of yubikey group to use yubikey auth
auth        [success=2 default=ignore]  pam_succeed_if.so user ingroup yubikey
# passsword auth fallback if not yubikey protected
auth        [success={{ pass_fallback_jump }} default=ignore]  pam_unix.so nullok_secure
# here's the fallback if pass module does not succeed
auth        requisite                   pam_deny.so
# auth with a yubikey
{% if yubikey_sudo_chal_rsp %}
auth        [success=2 default=ignore]  pam_yubico.so mode=challenge-response
{% endif %}
auth        [success=1 default=die]     pam_yubico.so mode=client id={{ yubikey_api_id }} key={{ yubikey_api_key }}
# here's the fallback if no yubico module succeeds
{% if yubikey_sudo_and_pass %}
auth        requisite                   pam_deny.so
# passsword auth
auth        [success=1 default=ignore]  pam_unix.so nullok_secure
# here's the fallback if no module succeeds
{% endif %}
auth        requisite                   pam_deny.so
# prime the stack with a positive return value if there isn't one already;
# this avoids us returning an error just because nothing sets a success code
# since the modules above will each just jump around
auth        required                    pam_permit.so
